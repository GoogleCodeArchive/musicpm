<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/icons.css" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/layout.css" type="text/css"?>
<!DOCTYPE overlay SYSTEM "chrome://minion/locale/minion.dtd">

<dialog id="mpmMenus" title="&appname; - &menued.title;"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    onload="getMenus();window.sizeToContent()"
    buttons="accept,cancel"
    buttonaccesskeyaccept="S"
    ondialogaccept="return doSave();"
    buttonlabelcancel="&cancel;"
    buttonaccesskeycancel="n"
    ondialogcancel="return doCancel();">
    <script>
    <![CDATA[
        Components.utils.import("resource://minion/mpmUtils.js");
        
		function addMenuItem (index, sep) {
			var xul = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
			var list = document.getElementById("menuList")
			var e = document.createElementNS(xul,'listitem')
			if (index < 0) {
				index = list.selectedIndex + 1
				if (nsMPM.Nz(sep)) nsMPM.mpmMenu.items.splice(index, 0, 'separator')
				else nsMPM.mpmMenu.items.splice(index, 0, new nsMPM.mpmMenu.mpmMenuItem)
			}
			if (nsMPM.mpmMenu.items[index] == 'separator') {
				var label = '<separator>'
			}
			else {
				var label = nsMPM.mpmMenu.items[index].label
			}
			list.insertItemAt(index, label, index);
		}

        function getMenus(select){
            var list = document.getElementById("menuList")
            list.changing = true
            while (list.hasChildNodes()) list.removeChild(list.lastChild)
            var len = nsMPM.mpmMenu.items.length
            for (var i=0;i<len;i++) {
                addMenuItem(i)
            }
            list.selectedIndex = nsMPM.Nz(select, 0)
            list.changing = false
        }

        function saveItem (e,index) {
			try {
				var list = document.getElementById("menuList")
				if (list.changing) return null
				var item = nsMPM.mpmMenu.items[index]
				if (typeof(item) == 'object') {
					rows = ["label", "targets", "locations", "URL", "queryType", "queryScope", "mpdCommand", "script"]
					for each (val in rows) {
						var row = document.getElementById('menuItem_'+val)
						if (row) {
							item[val] = (row.childNodes[1].value > "") ? row.childNodes[1].value : null
						}
					}
					e.label = item.label
					e.value = index;
				}
			} catch(ex) {nsMPM.debug(ex);}
		}

        function loadItem (e) {
			if (!e) return null;
			try {
				var list = document.getElementById("menuList")
				if (nsMPM.Nz(list.lastIndex,-1) > -1) {
					saveItem(list.childNodes[list.lastIndex],list.lastIndex);
				}
				var index = list.selectedIndex;
				var item = nsMPM.mpmMenu.items[index];
				rows = ["label", "targets", "locations", "URL", "queryType", "queryScope", "filterField", "mpdCommand", "script"];
				for each (val in rows) {
					var row = document.getElementById('menuItem_'+val);
					if (row) {
						row.childNodes[1].value = (nsMPM.Nz(item[val])) ? item[val] : "";
					}
				}
				list.lastIndex = index;
			} catch(ex) {nsMPM.debug(ex);}
        }
        
        function moveItem (dir) {
            var list = document.getElementById("menuList")
            list.changing = true
            var idx = list.selectedIndex
            if ((idx+dir) > -1 && (idx+dir)<list.itemCount) {
	            var mitem = nsMPM.mpmMenu.items.splice(idx,1)[0]
	            nsMPM.mpmMenu.items.splice(idx+(dir),0, mitem)
	            getMenus(idx+dir)
            }
            list.changing = false
        }
        
        function removeItem () {
            var list = document.getElementById("menuList")
            list.changing = true
            var idx = list.selectedIndex
            if (idx > -1) {
                var mitem = nsMPM.mpmMenu.items.splice(idx,1)[0]
                if (idx >= list.itemCount-1) idx--
                getMenus(idx)
            }
            list.changing = false
        }
        
        function restore () {
            var conf = confirm(nsMPM.translateService.GetStringFromName("reset_to_default_menus"))
            if (conf) {
                nsMPM.mpmMenu.restore()
                var list = document.getElementById("menuList")
                getMenus(list.selectedIndex)
            }
        }
 
        function doSave(){
            var list = document.getElementById("menuList")
            if (nsMPM.Nz(list.lastIndex,-1) > -1) {
                saveItem(list.childNodes[list.lastIndex],list.lastIndex);
            }
            nsMPM.mpmMenu.save()
            return true;
        }
        
        function doCancel(){
            nsMPM.mpmMenu.load()
            return true;
        }
    ]]>
    </script>

    <dialogheader title="&appname;" description="&menued.title;"/>
    <toolbar>
        <toolbarbutton label="&menued.addmenuitem;" 
                       class="mpm_btn_Add"
                       oncommand="addMenuItem(-1, false)"/>
        <toolbarbutton label="&menued.addsep;" 
                       class="mpm_btn_Add"
                       oncommand="addMenuItem(-1, true)"/>
        <toolbarbutton label="&menued.removemenuitem;" 
                       class="mpm_btn_Remove"
                       oncommand="removeItem()"/>
        <spacer flex="1"/>
        <toolbarbutton label="&menued.restdefaults;" 
                       class="mpm_btn_Update"
                       oncommand="restore()"/>
    </toolbar>
    <hbox flex="1">
        <vbox>
            <listbox id="menuList"
                flex="1"     
                onselect="loadItem(this.selectedItem);"/>
            <hbox pack="center" align="center">
                <button label="&menued.moveup;" flex="1" oncommand="moveItem(-1)"/>
                <button label="&menued.movedown;" flex="1" oncommand="moveItem(+1)"/>
            </hbox>
        </vbox>
        <grid id="menuItem" flex="1">
            <columns>
                <column/>
                <column minwidth="300" flex="1"/>
            </columns>
            <rows id="menuItemRows">
                <row id="menuItem_label">
                    <label value="&menued.itemlabel;" class="gridlabel"/>
                    <textbox/>
                </row>
                <row id="menuItem_targets">
                    <label value="&menued.restricttype;" class="gridlabel"/>
                    <textbox/>
                </row>
                <row id="menuItem_locations">
                    <label value="&menued.restrictloc;" class="gridlabel"/>
                    <textbox/>
                </row>
                <row id="menuItem_URL">
                    <label value="&menued.loadurl;" class="gridlabel"/>
                    <textbox/>
                </row>
                <row id="menuItem_queryType">
                    <label value="&menued.qfindall;" class="gridlabel"/>
                    <menulist>
	                    <menupopup>
                            <menuitem label=""/>
                            <menuitem label="&songs;" value="file"/>
	                        <menuitem label="&albums;" value="Album"/>
	                        <menuitem label="&artists;" value="Artist"/>
	                        <menuitem label="&composers;" value="Composer"/>
	                        <menuitem label="&dates;" value="Date"/>
	                        <menuitem label="&genres;" value="Genre"/>
	                        <menuitem label="&performers;" value="Performer"/>
	                    </menupopup>
                    </menulist>
                </row>
                <row id="menuItem_queryScope">
                    <label value="&menued.qsame;" class="gridlabel"/>
                    <menulist>
                        <menupopup>
                            <menuitem label=""/>
	                        <menuitem label="&album;" value="Album"/>
	                        <menuitem label="&artist;" value="Artist"/>
	                        <menuitem label="&composer;" value="Composer"/>
	                        <menuitem label="&date;" value="Date"/>
	                        <menuitem label="&genre;" value="Genre"/>
	                        <menuitem label="&performer;" value="Performer"/>
                        </menupopup>
                    </menulist>
                </row>
                <row id="menuItem_filterField">
                    <label value="&menued.qandsame;" class="gridlabel"/>
                    <menulist>
                        <menupopup>
                            <menuitem label=""/>
	                        <menuitem label="&album;" value="Album"/>
	                        <menuitem label="&artist;" value="Artist"/>
	                        <menuitem label="&composer;" value="Composer"/>
	                        <menuitem label="&date;" value="Date"/>
	                        <menuitem label="&genre;" value="Genre"/>
	                        <menuitem label="&performer;" value="Performer"/>
                        </menupopup>
                    </menulist>
                </row>
                <row id="menuItem_mpdCommand">
                    <label value="&menued.mpdcmd;" class="gridlabel"/>
                    <textbox/>
                </row>
                <row id="menuItem_script">
                    <label value="&menued.customscript;" class="gridlabel"/>
	                <textbox multiline="true" rows="4"/>
                </row>
            </rows>
        </grid>
    </hbox>
</dialog>

