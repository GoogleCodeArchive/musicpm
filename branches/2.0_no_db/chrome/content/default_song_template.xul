<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/bindings.css" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/icons.css" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/layout.css" type="text/css"?>
<?xml-stylesheet href="chrome://minion/content/theme_dark.css" type="text/css"?>
<?xul-overlay href="chrome://minion/content/menus.xul"?>
<!DOCTYPE overlay SYSTEM "chrome://minion/locale/minion.dtd">

<window
    id="song"
    title="&song.title;"
    orient="horizontal"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:html="http://www.w3.org/1999/xhtml"
    flex="1"
    style="overflow: auto">

    <script>
    <![CDATA[
        Components.utils.import("resource://minion/mpmUtils.js");
        Components.utils.import("resource://minion/mpd.js");
        var item = null
        var win = null
        var cycles = 0
        var observerCurSong = {
            observe: function(subject,topic,data){
                load(mpd.currentsong)
            }
        };

        function load (objItem) {
            document.getElementById("song").className = (prefs.get("use_theme", true)) ? "mpm_themed" : ""
            var tags = ['Title', 'Artist', 'Album', 'Date', 'Genre',
                'Composer', 'Performer', 'directory', 'length']
            item = objItem
            item.directory = item.name.replace(/\/[^\/]+$/,"")
            item.length = prettyTime(item.Time)
            for (var i=0;i<tags.length;i++) {
                var tag = tags[i]
                var val = Nz(item[tag], "")
                if (val > "") {
                    document.getElementById(tag+"_label").value = val
                    document.getElementById(tag+"_row").collapsed = false
                } else {
                    document.getElementById(tag+"_row").collapsed = true
                }
            }
            var ib = document.getElementById("image-box")
            ib.setAttribute("width",ib.boxObject.height)
            mpd.getArt(item, document.getElementById("cover"))
            mpd.getLyrics(item,
                document.getElementById("lyrics"),
                document.getElementById("lyricsButton")
            )
        }

        function browseTo (type) {
            var thing = {type: type, name: item[type], Title: item[type]}
            if (type == 'Album') {
                followItem(thing, "Artist", item.Artist)
            } else {
                followItem(thing, null, null)
            }
        }

        function addItem () {
            item.Pos = Nz(mpd.playlistlength, 0)
            mpd.addToPlaylist(item)
        }

        function playItem () {
            if (!Nz(item.Pos)) {
                item.Pos = Nz(mpd.playlistlength, 0)
                mpd.addToPlaylist(item)
            }
            mpd.doCmd("play "+item.Pos)
        }

        function loadLFTags () {
            try {
                var doc = win.document.wrappedJSObject
                doc.getElementById("title").value = item.Title
                doc.getElementById("artist").value = item.Artist
                doc.getElementById("album").value = item.Album
                doc.getElementById("comments").value = "Submitted via Music Player Minion."
                doc.getElementById("checker1").value = doc.getElementById("checker2").value
            }
            catch (e) {
                cycles++
                if (cycles < 100) {
                    window.setTimeout("loadLFTags()",100)
                }
                else debug(e)
            }
        }

        function editLyrics (link) {
            win = window.open(link)
            if (link == "http://lyricsfly.com/submit/") {
                cycles = 0
                window.setTimeout("loadLFTags()",100)
            }
        }
        
        function toggleFollowCurrent (val) {
            if (val) {
                observerService.addObserver(observerCurSong,"file",false)
            } else {
                observerService.removeObserver(observerCurSong,"file")
            }
        }
    ]]>
    </script>
    <vbox style="max-width:50%; overflow: hidden">
        <hbox id="image-box" align="center" pack="center">
            <image id="cover" class="mpm_browser_image"
                    validate="never"
                    ondblclick="this.className=(this.className=='mpm_browser_image') ? '' : 'mpm_browser_image'"/>
            <spacer flex="1"/>
        </hbox>
        <grid id="props" flex="1" style="overflow: hidden">
            <columns>
                <column style="font-weight:bold"/>
                <column flex="1" style="overflow: hidden"/>
                <column/>
            </columns>
            <rows>
                <row id="Title_row" class="tag_row">
                    <label style="font-weight:bold" value="&title;:"/>
                    <label id="Title_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_add" oncommand="addItem()"/>
                </row>
                <row id="length_row" class="tag_row">
                    <label style="font-weight:bold" value="&length;:"/>
                    <label id="length_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_play" oncommand="playItem()"/>
                </row>
                <row id="Album_row" class="tag_row">
                    <label style="font-weight:bold" value="&album;:"/>
                    <label id="Album_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Album')"/>
                </row>
                <row id="Artist_row" class="tag_row">
                    <label style="font-weight:bold" value="&artist;:"/>
                    <label id="Artist_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Artist')"/>
                </row>
                <row id="Composer_row" class="tag_row">
                    <label style="font-weight:bold" value="&composer;:"/>
                    <label id="Composer_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Composer')"/>
                </row>
                <row id="Performer_row" class="tag_row">
                    <label style="font-weight:bold" value="&performer;:"/>
                    <label id="Performer_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Performer')"/>
                </row>
                <row id="Date_row" class="tag_row">
                    <label style="font-weight:bold" value="&date;:"/>
                    <label id="Date_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Date')"/>
                </row>
                <row id="Genre_row" class="tag_row">
                    <label style="font-weight:bold" value="&genre;:"/>
                    <label id="Genre_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('Genre')"/>
                </row>
                <row id="directory_row" class="tag_row">
                    <label style="font-weight:bold" value="&folder;:"/>
                    <label id="directory_label" class="tag_val" crop="start"/>
                    <toolbarbutton class="mpm_icon_Search" oncommand="browseTo('directory')"/>
                </row>
            </rows>
        </grid>
        <spacer flex="1"/>
        <checkbox checked="false" label="&song.follow;"
              oncommand="toggleFollowCurrent(this.checked)"/>
    </vbox>
    <vbox flex="1">
        <hbox>
            <toolbarbutton label="&song.lyricsfly;" style="font-weight: bold"
                oncommand="openReuseByURL('http://lyricsfly.com')"/>
            <spacer flex="1"/>
            <toolbarbutton id="lyricsButton" label="&song.edit;"
                oncommand="editLyrics(this.edit_link)"/>
        </hbox>
        <textbox id="lyrics" flex="1" multiline="true" readonly="true"/>
    </vbox>
</window>
